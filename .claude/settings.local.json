{
  "permissions": {
    "allow": [
      "Bash(rm:*)",
      "Bash(powershell:*)",
      "Bash(git checkout:*)",
      "Bash(npx @chongdashu/cc-statusline@latest init)",
      "Bash(printf \"Y\\n\\n\")",
      "Read(//c/Users/Tien/.claude/**)",
      "Bash(cc-statusline preview:*)",
      "Bash(npx @chongdashu/cc-statusline@latest preview:*)",
      "Bash(chmod:*)",
      "Bash(bash:*)",
      "Bash(cc-statusline:*)",
      "Bash(npx @chongdashu/cc-statusline@latest status:*)",
      "Bash(npx @chongdashu/cc-statusline@latest:*)",
      "Bash(dir:*)",
      "Bash(npm run dev:*)",
      "Bash(npm run lint)",
      "Bash(npm run build:*)",
      "Bash(npm run lint:*)",
      "Bash(npx tsc:*)",
      "Bash(npm test:*)",
      "Bash(curl:*)",
      "Bash(npm run type-check:*)",
      "Bash(grep:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_drag",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_handle_dialog",
      "mcp__playwright__browser_take_screenshot",
      "Bash(timeout 10 npm run dev)",
      "Bash(find:*)",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_press_key",
      "Bash(mkdir:*)",
      "Bash(taskkill:*)",
      "Bash(netstat:*)",
      "WebSearch",
      "Bash(timeout 5 npm run dev)",
      "Bash(timeout:*)",
      "mcp__playwright__browser_resize",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "mcp__playwright__browser_select_option",
      "WebFetch(domain:m.convert-me.com)",
      "WebFetch(domain:en.wikipedia.org)",
      "Bash(git push:*)",
      "Bash(findstr:*)",
      "Bash(npm run test:*)",
      "Bash(npm install:*)",
      "Bash(npm run test:run:*)",
      "Bash(npm run test:all:*)",
      "Bash(npm run test:integration:*)",
      "Bash(npx vitest run:*)",
      "Bash(npm run test:unit:*)",
      "Bash(gh pr:*)",
      "Bash(npx vite build:*)",
      "Bash(cut:*)",
      "mcp__playwright__browser_close",
      "Read(//c/Users/Tien/Documents/ShareX/Screenshots/2025-09/**)",
      "Bash(cmd /c:*)",
      "WebFetch(domain:www.canva.com)",
      "WebFetch(domain:medium.com)",
      "WebFetch(domain:designbundles.net)",
      "Bash(rg:*)",
      "WebFetch(domain:localhost)",
      "Bash(cat:*)",
      "Bash(start test-snapping.html)",
      "WebFetch(domain:www.cadtutor.net)",
      "Bash(lsof:*)",
      "mcp__playwright__browser_hover",
      "Bash(node:*)",
      "mcp__ide__getDiagnostics",
      "Bash(npm run test:coverage:*)",
      "Bash(claude --version)",
      "Bash(claude update)",
      "Bash(sed:*)",
      "WebFetch(domain:www.smartdraw.com)",
      "WebFetch(domain:smartdraw.zendesk.com)",
      "Bash(start C:\\Users\\Tien\\Documents\\land-viz\\test-keyboard.html)",
      "Bash(npx playwright install:*)",
      "Bash(tasklist)",
      "Bash(npx playwright test:*)",
      "WebFetch(domain:docs.opencv.org)",
      "Bash(uv tool install:*)",
      "Bash(uv tool update-shell:*)",
      "Bash(C:\\Users\\Tien\\.local\\bin\\specify:*)",
      "Bash(\"/c/Users/Tien/.local/bin/specify\" --version)",
      "Bash(\"/c/Users/Tien/.local/bin/specify\" --help)",
      "Bash(uv tool:*)",
      "Read(//c/Users/Tien/.local/bin//**)",
      "Read(//c/Users/Tien/AppData/Roaming/uv/tools/specify-cli/**)",
      "Bash(set PYTHONIOENCODING=utf-8)",
      "WebFetch(domain:github.com)",
      "Bash(test:*)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Read(//c/**)",
      "Bash(npx playwright:*)",
      "WebFetch(domain:helpx.adobe.com)",
      "WebFetch(domain:designshack.net)",
      "WebFetch(domain:filtergrade.com)",
      "Bash(for file in ShapeRenderer.tsx ResizableShapeControls.tsx ElementRenderer.tsx ShapeElementRenderer.tsx)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(for file in ElementRenderer.tsx ShapeElementRenderer.tsx ShapeRenderer.tsx ResizableShapeControls.tsx)",
      "Bash(do )",
      "Bash(npx eslint src/components/Scene/ResizableShapeControls.tsx src/store/useAppStore.ts --max-warnings=0)",
      "Bash(command -v:*)"
    ],
    "deny": [],
    "ask": []
  },
  "hooks": {
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "powershell -ExecutionPolicy Bypass -Command \"rundll32 user32.dll,MessageBeep 64; Add-Type -AssemblyName PresentationFramework; [System.Windows.MessageBox]::Show('Claude has finished the task!', 'Claude Done', 'OK', 'Information')\""
          }
        ]
      }
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "bash .claude/statusline.sh"
  }
}
